name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        php: ['8.4']  # Easily extendable for ['8.2', '8.3', '8.4']

    name: PHP ${{ matrix.php }}

    env:
      extensions: curl, bcmath, ctype, fileinfo, json, mbstring, pdo, tokenizer, libxml, sqlite, pdo_sqlite
      key: cache-v1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v4
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          tools: composer:v2
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> "$GITHUB_OUTPUT"

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Aspell
        run: |
          sudo apt-get update
          sudo apt-get install -y aspell aspell-en

      - name: Install Node.js and frontend dependencies
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install NPM packages
        run: npm ci

      - name: Install PHP dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist --optimize-autoloader

      - name: Prepare the application
        run: |
          cp .env.example .env || true
          php artisan key:generate
          php artisan config:cache

      - name: Execute tests
        run: composer test
